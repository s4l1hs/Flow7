name: Deploy

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      IMAGE_NAME: ${{ secrets.REGISTRY }}/flow7:${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}

  migrate-and-deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull image
        run: docker pull ${{ secrets.REGISTRY }}/flow7:${{ github.ref_name }}

      - name: Run migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          # If your DB requires extra envs (user, password), pass them here.
        run: |
          # Run alembic from the image so migrations run with the same codebase
          docker run --rm \
            -e DATABASE_URL="${DATABASE_URL}" \
            ${{ secrets.REGISTRY }}/flow7:${{ github.ref_name }} \
            /bin/sh -c "alembic -c alembic.ini upgrade head"

      - name: Deploy to Kubernetes
        if: startsWith(github.ref, 'refs/tags/')
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
          IMAGE: ${{ secrets.REGISTRY }}/flow7:${{ github.ref_name }}
        run: |
          set -euo pipefail
          echo "Setting up kubectl"
          echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
          export KUBECONFIG=$(pwd)/kubeconfig
          # install envsubst (gettext)
          sudo apt-get update -y
          sudo apt-get install -y gettext-base

          echo "Applying migration Job (image substituted)"
          envsubst < k8s/flow7-migration-job.yaml | kubectl apply -f -
          echo "Waiting for migration job to complete..."
          kubectl wait --for=condition=complete job/flow7-migrate --timeout=600s || (kubectl logs job/flow7-migrate --all-containers; exit 1)

          echo "Applying deployments/services"
          envsubst < k8s/flow7-deployment.yaml | kubectl apply -f -
          envsubst < k8s/flow7-scheduler-deployment.yaml | kubectl apply -f -

          echo "Waiting for rollout to complete"
          kubectl rollout status deployment/flow7 --timeout=300s

          echo "Port-forwarding service to run a quick health check"
          # port-forward in background
          kubectl port-forward service/flow7-web 8000:80 >/tmp/flow7-pf.log 2>&1 &
          PF_PID=$!
          sleep 2
          # try health and metrics
          if ! curl -fsS http://127.0.0.1:8000/health; then
            echo "Health check failed, dumping logs"
            kubectl logs deployment/flow7 --tail=200 || true
            kill $PF_PID || true
            exit 1
          fi
          if ! curl -fsS http://127.0.0.1:8000/metrics; then
            echo "Metrics endpoint failed"
            kill $PF_PID || true
            exit 1
          fi
          kill $PF_PID || true

          echo "Deployment applied and basic smoke checks passed."
